{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","state","action","res","id","_res","wrap","_context","prev","next","t0","type","Axios","delete","concat","payload","t1","abrupt","objectSpread","contacts","filter","contact","post","sent","data","toConsumableArray","put","map","stop","this","_x","_x2","apply","arguments","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","_len","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","dispatch","_dispatch","_callee2","_context2","setState","_x3","inherits","createClass","key","value","_componentDidMount","_callee3","_context3","get","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDelete","_this2","_this$props$contact","name","email","phone","toggleContactShow","className","onClick","toggle","bind","style","cursor","float","color","Link","to","fontSize","marginRight","Contacts","Fragment","contacts_Contact","Header","branding","href","defaultProps","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","onInputChange","e","defineProperty","target","onSubmit","preventDefault","_this$state","history","push","_this$state2","layout_TextInputGroup","About","NotFound","Test","title","body","fetch","then","response","json","console","log","nextProps","nextState","prevProps","prevState","test","EditContact","match","params","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f4061d5a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Axios from 'axios';\r\nconst Context = React.createContext();\r\n\r\n\r\nconst reducer = async (state, action) => {\r\n    switch (action.type) {\r\n        case 'DELETE_CONTACT': {\r\n            try {\r\n                await Axios.delete(`https://jsonplaceholder.typicode.com/users/${action.payload}`);\r\n            } catch {\r\n\r\n            }\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n            }\r\n        }\r\n        case 'ADD_CONTACT': {\r\n            const res = await Axios.post('https://jsonplaceholder.typicode.com/users', action.payload);\r\n            return {\r\n                ...state,\r\n                contacts: [res.data, ...state.contacts]\r\n            }\r\n        }\r\n        case 'UPDATE_CONTACT': {\r\n            const id = action.payload.id;\r\n            const res = await Axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, action.payload);\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact => {\r\n                    return contact.id === id ? (contact = res.data) : contact\r\n                })\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [\r\n\r\n        ],\r\n        dispatch: async (action) => {\r\n            const state = await reducer(this.state, action);\r\n            this.setState(state);\r\n        }\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const res = await Axios.get('https://jsonplaceholder.typicode.com/users')\r\n        this.setState({\r\n            contacts: res.data\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Consumer } from '../../context';\r\nimport { Link } from 'react-router-dom'\r\nclass Contact extends Component {\r\n    static propTypes = {\r\n        contact: PropTypes.object.isRequired\r\n    };\r\n\r\n    state = {\r\n        showContactInfo: false\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({\r\n            showContactInfo: !this.state.showContactInfo\r\n        });\r\n    }\r\n\r\n    onDelete = (dispatch, id) => {\r\n        dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n    }\r\n\r\n    render() {\r\n        const { name, email, phone, id } = this.props.contact;\r\n        const { showContactInfo } = this.state;\r\n        const toggleContactShow = (showContactInfo) => {\r\n            return showContactInfo ? 'fas fa-angle-down' : 'fas fa-angle-right';\r\n        };\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card card-body mb-3\">\r\n                            <h4>{name}&nbsp;\r\n                                <i onClick={this.toggle.bind(this)}\r\n                                    className={toggleContactShow(showContactInfo)}\r\n                                    style={{ cursor: 'pointer' }}></i>\r\n                                <i className=\"fas fa-times\" style={{ cursor: 'pointer', float: 'right', color: 'red' }}\r\n                                    onClick={this.onDelete.bind(this, dispatch, id)}></i>\r\n                                <Link to={`contact/edit/${id}`}>\r\n                                    <i className=\"fas fa-pencil-alt\"\r\n                                        style={{\r\n                                            cursor: 'pointer',\r\n                                            float: 'right',\r\n                                            color: 'black',\r\n                                            fontSize: '18px',\r\n                                            marginRight: '1rem'\r\n                                        }}></i></Link>\r\n                            </h4>\r\n                            {\r\n                                showContactInfo ?\r\n                                    <ul className=\"list-group\">\r\n                                        <li className=\"list-group-item\">Email: {email}</li>\r\n                                        <li className=\"list-group-item\">Phone: {phone}</li>\r\n                                    </ul> : null\r\n                            }\r\n\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react'\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context';\r\n\r\nclass Contacts extends Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const contacts = value.contacts;\r\n                    return (\r\n                        <React.Fragment>\r\n                            <h1 className=\"display4 mb-2\"><span className=\"text-danger\">Contact</span> List</h1>\r\n                            {contacts.map((contact) =>\r\n                                <Contact key={contact.id} contact={contact} />)}\r\n                        </React.Fragment>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\nexport default Contacts;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom'\r\nconst Header = (props) => {\r\n    const { branding } = props;\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n                <div className=\"container\">\r\n                    <a href=\"/\" className=\"navbar-brand\">{branding}</a>\r\n                    <div>\r\n                        <ul className=\"navbar-nav mr-auto\">\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/\" className=\"nav-link\"><i className=\"fas fa-home\"></i> Home</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/contact/add\" className=\"nav-link\"><i className=\"fas fa-plus\"></i> Add</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/about\" className=\"nav-link\"><i className=\"fas fa-question\"></i> About</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n}\r\n\r\nHeader.defaultProps = {\r\n    branding: 'My App'\r\n};\r\n\r\n\r\n\r\nexport default Header;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames';\r\nconst TextInputGroup = ({\r\n    label, name, value, placeholder, type, onChange, error\r\n}) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input\r\n                value={value}\r\n                onChange={onChange}\r\n                type={type}\r\n                name={name}\r\n                className={classnames(\"form-control form-control-lg\", {\r\n                    'is-invalid': error\r\n                })}\r\n                placeholder={placeholder} />\r\n            {error && <div className=\"invalid-feedback\">{error}</div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nTextInputGroup.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n}\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react'\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\n\r\nclass AddContact extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n\r\n\r\n    onInputChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit = (dispatch, e) => {\r\n        e.preventDefault();\r\n\r\n        const { name, email, phone } = this.state;\r\n\r\n        // check for errs\r\n        if (name === '') {\r\n            this.setState({ errors: { name: 'Name is Required' } });\r\n            return;\r\n        }\r\n\r\n        if (email === '') {\r\n            this.setState({ errors: { email: 'Email is Required' } });\r\n            return;\r\n\r\n        }\r\n\r\n        if (phone === '') {\r\n            this.setState({ errors: { phone: 'Phone is Required' } });\r\n            return;\r\n\r\n        }\r\n\r\n        dispatch({\r\n            type: 'ADD_CONTACT',\r\n            payload: {\r\n                name,\r\n                email,\r\n                phone\r\n            }\r\n        });\r\n\r\n        // tidy up\r\n\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        })\r\n\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n\r\n        const { name, email, phone, errors } = this.state;\r\n        return (\r\n            <Consumer>\r\n                {(value) => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">Add Contact</div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                    <TextInputGroup value={name}\r\n                                        onChange={this.onInputChange.bind(this)}\r\n                                        name=\"name\"\r\n                                        label=\"Name\"\r\n                                        className=\"form-control form-control-lg\"\r\n                                        error={errors.name}\r\n                                        placeholder=\"Enter Name...\" />\r\n\r\n                                    <TextInputGroup\r\n                                        value={email}\r\n                                        onChange={this.onInputChange.bind(this)}\r\n                                        type=\"email\"\r\n                                        name=\"email\"\r\n                                        className=\"form-control form-control-lg\"\r\n                                        placeholder=\"Enter Email...\"\r\n                                        error={errors.email}\r\n                                        label=\"Email\"\r\n                                    />\r\n\r\n                                    <TextInputGroup\r\n                                        value={phone}\r\n                                        onChange={this.onInputChange.bind(this)}\r\n                                        type=\"phone\"\r\n                                        name=\"phone\"\r\n                                        className=\"form-control form-control-lg\"\r\n                                        placeholder=\"Enter Phone...\"\r\n                                        error={errors.phone}\r\n                                        label=\"Phone\"\r\n                                    />\r\n\r\n                                    <input type=\"submit\"\r\n                                        value=\"Add Contact\"\r\n                                        className=\"btn btn-light btn-block\" />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }\r\n\r\n                }\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddContact;\r\n","import React from 'react'\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple app to manager contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\r\n            <p className=\"lead\">Sorry, that page does not exist.</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Test extends Component {\r\n\r\n    state = {\r\n        title: '',\r\n        body: ''\r\n    }\r\n    /**\r\n     * https://medium.com/@baphemot/understanding-react-react-16-3-component-life-cycle-23129bc7a705\r\n     */\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n            .then(response => response.json())\r\n            .then(({ title, body }) => this.setState({ title, body }))\r\n    }\r\n\r\n    /**\r\n     * Will be deprecated\r\n     */\r\n    componentWillMount() {\r\n        console.log('componentWillMount...')\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        console.log('componentDidUpdate...')\r\n    }\r\n\r\n    /**\r\n    * Will be deprecated\r\n    */\r\n    componentWillUpdate() {\r\n        console.log('componentWillUpdate...')\r\n    }\r\n\r\n    /**\r\n    * Will be deprecated\r\n    */\r\n    componentWillReceiveProps(nextProps, nextState) {\r\n        console.log('componentWillReceiveProps...')\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        return {\r\n            test: 'something'\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Before dom is updated\r\n     */\r\n\r\n    getSnapshotBeforeUpdate(prevProps, prevState) {\r\n        console.log('getSnapshotBeforeUpdate...')\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Test Component</h1>\r\n                <h2>{this.state.title}</h2>\r\n                <p>{this.state.body}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport Axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n\r\n\r\n    onInputChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit = (dispatch, e) => {\r\n        e.preventDefault();\r\n\r\n        const { name, email, phone } = this.state;\r\n\r\n        // check for errs\r\n        if (name === '') {\r\n            this.setState({ errors: { name: 'Name is Required' } });\r\n            return;\r\n        }\r\n\r\n        if (email === '') {\r\n            this.setState({ errors: { email: 'Email is Required' } });\r\n            return;\r\n\r\n        }\r\n\r\n        if (phone === '') {\r\n            this.setState({ errors: { phone: 'Phone is Required' } });\r\n            return;\r\n\r\n        }\r\n\r\n        const { id } = this.props.match.params;\r\n\r\n        dispatch({\r\n            type: 'UPDATE_CONTACT',\r\n            payload: {\r\n                name,\r\n                email,\r\n                phone,\r\n                id\r\n            }\r\n        });\r\n\r\n\r\n        // tidy up\r\n\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        })\r\n\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n\r\n        const res = await Axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n        const contact = res.data;\r\n        this.setState(contact);\r\n    }\r\n\r\n    render() {\r\n\r\n        const { name, email, phone, errors } = this.state;\r\n        return (\r\n            <Consumer>\r\n                {(value) => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">Edit Contact</div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                    <TextInputGroup value={name}\r\n                                        onChange={this.onInputChange.bind(this)}\r\n                                        name=\"name\"\r\n                                        label=\"Name\"\r\n                                        className=\"form-control form-control-lg\"\r\n                                        error={errors.name}\r\n                                        placeholder=\"Enter Name...\" />\r\n\r\n                                    <TextInputGroup\r\n                                        value={email}\r\n                                        onChange={this.onInputChange.bind(this)}\r\n                                        type=\"email\"\r\n                                        name=\"email\"\r\n                                        className=\"form-control form-control-lg\"\r\n                                        placeholder=\"Enter Email...\"\r\n                                        error={errors.email}\r\n                                        label=\"Email\"\r\n                                    />\r\n\r\n                                    <TextInputGroup\r\n                                        value={phone}\r\n                                        onChange={this.onInputChange.bind(this)}\r\n                                        type=\"phone\"\r\n                                        name=\"phone\"\r\n                                        className=\"form-control form-control-lg\"\r\n                                        placeholder=\"Enter Phone...\"\r\n                                        error={errors.phone}\r\n                                        label=\"Phone\"\r\n                                    />\r\n\r\n                                    <input type=\"submit\"\r\n                                        value=\"Update Contact\"\r\n                                        className=\"btn btn-light btn-block\" />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }\r\n\r\n                }\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditContact;\r\n","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Contacts from './components/contacts/Contacts';\nimport Header from './components/layout/Header';\nimport { Provider } from './context';\nimport AddContact from './components/contacts/AddContact';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\nimport EditContact from './components/contacts/EditContact';\nclass App extends Component {\n    render() {\n        return (\n            <Provider>\n                <Router>\n                    <div className=\"App\" >\n                        <Header branding=\"Contact Manager\" />\n                        <div className=\"container\">\n                            <Switch>\n                                <Route exact path=\"/\" component={Contacts}></Route>\n                                <Route exact path=\"/contact/add\" component={AddContact}></Route>\n                                <Route exact path=\"/contact/edit/:id\" component={EditContact}></Route>\n                                <Route exact path=\"/about\" component={About}></Route>\n                                <Route exact path=\"/test\" component={Test}></Route>\n                                <Route component={NotFound}></Route>\n                            </Switch>\n                        </div>\n                    </div>\n                </Router>\n            </Provider>\n\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}